use_git()
use_mit_license()
?use_mit_license
??use_mit_license
usethis::use_mit_license()
writeLines(readLines("LICENSE"))
library(roxygen2)
use_package("stats")
usethis::use_package("stats")
usethis::use_package("dplyr")
usethis::use_package(c("dplyr","lubridate","zoo","Hmisc","MuMIn"))
usethis::use_package("lubridate")
usethis::use_package("zoo")
usethis::use_package("Hmisc")
usethis::use_package("MuMIn")
library(boiwsa)
load_all()
usethis::load_all()
document()
library(usethis)
document()
use_package("boiwsa")
use_r("boiwsa")
?boiwsa
??boiwsa
user("boiwsa")
use_r("boiwsa")
# getting path to the current directory
path=rstudioapi::getActiveDocumentContext()$path
# setting it as a working directory
setwd(dirname(path))
library(devtools)
use_r("boiwsa")
library(devtools)
use_r("boiwsa")
library(devtools)
load_all()
?boiwsa
library(devtools)
library(usethis)
library(roxygen2)
load_all()
library(devtools)
library(usethis)
library(fpp2)
data=data.frame(date=seq.Date(from=as.Date("1991-02-02"),length.out = length(gasoline),by="weeks"),
y=as.numeric(gasoline))
View(data)
load_all()
stam=boiwsa(x=data$y,dates=data$date)
library(fpp2)
library(devtools)
library(usethis)
data=data.frame(date=seq.Date(from=as.Date("1991-02-02"),length.out = length(gasoline),by="weeks"),y=as.numeric(gasoline))
load_all()
stam=boiwsa(x=data$y,dates=data$date)
use_r()
use_r("boiwsa")
library(lubridate)
stam=boiwsa(x=data$y,dates=data$date)
load_all()
stam=boiwsa(x=data$y,dates=data$date)
stam$ao.list
as.Date(stam$ao.list)
load_all()
stam=boiwsa(x=data$y,dates=data$date)
stam$ao.list
as.character(stam$ao.list)
as.Date(as.character(stam$ao.list))
load_all()
stam=boiwsa(x=data$y,dates=data$date)
stam$ao.list
load_all()
stam=boiwsa(x=data$y,dates=data$date)
stam$ao.list
lubridate::as_date(10313)
load_all()
stam=boiwsa(x=data$y,dates=data$date)
stam$ao.list
plot(stam$x,type="l")
lines(sa,col="red")
lines(stam$sa,col="red")
lines(stam$trend,col="blue")
ggtsdisplay(stam$sa,lag.max = 57)
ggtsdisplay(diff(stam$sa),lag.max = 57)
use_r("boiwsa")
library(fpp2)
library(devtools)
library(usethis)
data=data.frame(date=seq.Date(from=as.Date("1991-02-02"),length.out = length(gasoline),by="weeks"),y=as.numeric(gasoline))
load_all()
stam=boiwsa(x=data$y,dates=data$date)
stam$ao.list
install.packages(c("actuar", "BH", "bit", "brew", "broom", "bslib", "callr", "car", "caret", "colorspace", "commonmark", "cpp11", "crayon", "curl", "data.table", "dbplyr", "desc", "devtools", "digest", "distributional", "dlm", "dplyr", "DT", "dtplyr", "e1071", "evaluate", "expint", "expm", "extrafont", "fable", "FactoMineR", "fansi", "farver", "fBasics", "feasts", "fGarch", "FKF", "fma", "fontawesome", "forcats", "forecast", "fpp2", "fpp3", "fracdiff", "fs", "furrr", "future", "future.apply", "gargle", "generics", "gert", "ggplot2", "ggpubr", "ggrepel", "ggridges", "ggsignif", "gh", "gitcreds", "glmnet", "globals", "googlesheets4", "gower", "gtable", "hardhat", "haven", "highr", "Hmisc", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "isoband", "jsonlite", "KFAS", "knitr", "latex2exp", "lava", "lifecycle", "listenv", "lme4", "lubridate", "magic", "maptools", "markdown", "MatrixModels", "mice", "minqa", "modelr", "openssl", "openxlsx", "parallelly", "pbkrtest", "pillar", "pkgbuild", "pkgload", "pls", "plyr", "processx", "progressr", "ps", "purrr", "quantreg", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "readr", "readxl", "recipes", "reprex", "rmarkdown", "RMySQL", "rstatix", "rstudioapi", "Rttf2pt1", "rversions", "rvest", "sass", "scales", "scatterplot3d", "shiny", "slider", "sourcetools", "sp", "stringi", "stringr", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "timeDate", "timeSeries", "tinytex", "tseries", "tsfeatures", "tsibble", "tsibbledata", "urca", "utf8", "vctrs", "viridisLite", "vroom", "whisker", "xfun", "xts", "yaml", "zip", "zoo"))
install_github("timginker/boiwsa")
library(devtools)
install_github("timginker/boiwsa")
library(remotes)
install_github("timginker/boiwsa")
options(install.packages.check.source = "no")
install_github("timginker/boiwsa")
library(remotes)
install_github("timginker/boiwsa")
library(boiwsa)
library(boiwsa)
?boiwsa
library(devtools)
library(roxygen2)
library(usethis)
use_r()
use_r("boiwsa")
load_all()
?boiwsa
document()
load_all()
?boiwsa
document()
document()
load_all()
?boiwsa
document()
document()
library(remotes)
install_github("timginker/boiwsa")
library(boiwsa)
?boiwsa
library(devtools)
library(roxygen2)
library(usethis)
use_r("boiwsa")
document()
?boiwsa
document()
?boiwsa
document()
document()
?boiwsa
document()
?boiwsa
document()
??auto.arima
library(devtools)
library(usethis)
library(roxygen2)
document()
load_all()
document()
load_all()
?my_ao
document()
use_r("my_ao")
document()
use_r("R/fourier_vars.R")
use_r("fourier_vars")
document()
use_r("boiwsa")
document()
library(remotes)
install_github("timginker/boiwsa")
library(devtools)
library(roxygen2)
library(usethis)
use_r("boiwsa")
?supsmu
document
document()
use_r("findopt")
use_r("find_opt")
document()
document()
?lm
?AIC
?BIC
?cbind
document()
load_all()
library(fpp2)
data=data.frame(date=seq.Date(from=as.Date("1991-02-02"),length.out = length(gasoline),by="weeks"),
y=as.numeric(gasoline))
find_opt(x=data$y,dates = data$date)
?find_opt
find_opt(x=data$y,dates = data$date,method = "multiplicative")
use_r("find_opt")
document()
document()
load_all()
?find_opt
document()
use_r("my_ao")
document()
?my_ao
document()
?my_ao
use_r("fourier_vars")
use_r("find_opt")
document()
fourier_vars
?fourier_vars
document()
use_r("find_outliers")
document()
?find_outliers
?median
document()
library(devtools)
load_all()
library(fpp2)
data=data.frame(date=seq.Date(from=as.Date("1991-02-02"),length.out = length(gasoline),by="weeks"),
y=as.numeric(gasoline))
boiwsa::find_opt(x=data$y,dates=data$date)
boiwsa::find_outliers(x=data$y,dates=data$date)
use_r("find_outliers")
document()
load_all()
boiwsa::find_outliers(x=data$y,dates=data$date)
use_r("find_opt")
find_opt(x=data$y,y=data$date)
find_opt(x=data$y,dates =data$date)
document()
library(remotes)
install_github("timginker/boiwsa")
library(boiwsa)
?find_opt
>?find_outliers()
?find_outliers
library(devtools)
use_r("boiwsa")
library(devtools)
library(roxygen2)
library(fpp2)
data=data.frame(date=seq.Date(from=as.Date("1991-02-02"),length.out = length(gasoline),by="weeks"),
y=as.numeric(gasoline))
gasoline.data=data
save(gasoline.data,"./data/gasoline.data.rda")
save(gasoline.data,file="./data/gasoline.data.rda")
document()
document()
library(devtools)
load_all()
gasoline.data
?gasoline.data
usethis::use_data(gasoline.data)
usethis::use_data(gasoline.data,overwrite = T)
document()
?gasoline.data
data=gasoline.data
View(data)
document()
?gasoline.data
?gasoline.data
load_all()
?gasoline.data
install.packages("sinew")
sinew::makeOxygen(gasoline.data, add_fields = "source")
library(devtools)
load_all()
sinew::makeOxygen(gasoline.data, add_fields = "source")
document()
?gasoline.data
use_r("data")
document()
remotes::install_github("timginker/boiwsa")
library(boiwsa)
stam=boiwsa(x=gasoline.data$y,dates=gasoline.data$date)
stam$sa
plot(gasoline.data$y,type="l")
lines(stam$sa)
plot(gasoline.data$y,type="l")
lines(stam$sa,col="red")
library(usethis)
library(devtools)
library(roxygen2)
library(sinew)
library(readxl)
dates3 <- read_excel("C:/Users/timgi/OneDrive - Bar Ilan University/BOI/Seasonality/Weekly data/BOI_WSA/Data/dates3.xlsx")
View(dates3)
library(devtools)
library(roxygen2)
dates_il=dates3
usethis::use_data(dates_il, overwrite = T)
use_r()
use_r("data")
sinew::makeOxygen(dates_il, add_fields = "source")
document()
?dates_il
document()
library(tidyverse)
read.csv("C:/Users/timgi/OneDrive - Bar Ilan University/BOI/Seasonality/Weekly data/BOI_WSA/Data/holidays.csv")
read.csv("C:/Users/timgi/OneDrive - Bar Ilan University/BOI/Seasonality/Weekly data/BOI_WSA/Data/holiday_dates.csv")
holiday_dates=read.csv("C:/Users/timgi/OneDrive - Bar Ilan University/BOI/Seasonality/Weekly data/BOI_WSA/Data/holiday_dates.csv")
View(holiday_dates)
View(dates_il)
holiday_dates%>%mutate(rosh=as.Date(rosh, format = "%d/%m/%Y"),pesah=as.Date(pesah, format = "%d/%m/%Y"))->holiday_dates_il
View(holiday_dates_il)
usethis::use_data(holiday_dates_il, overwrite = T)
sinew::makeOxygen(holiday_dates_il, add_fields = "source")
document()
document()
library(devtools)
load_all
load_all()
?dates_il
?holiday_dates_il
data("holiday_dates_il")
View(holiday_dates_il)
View(dates_il)
?dates_il
libra
library(devtools)
use_r("boiwsa")
use_r("boiwsa")
document()
load_all()
stam=boiwsa(x=gasoline.data$y,dates=gasoline.data$date)
plot_spec(stam)
use_r("plot_spec")
document()
plot_spec(stam)
document()
?gasoline.data
document()
use_r("data")
document()
remotes::install_github("timginker/boiwsa")
library(boiwsa)
?plot_spec
library(boiwsa)
res=boiwsa(x=gasoline.data$y,dates=gasoline.data$date)
plot_spec(res)
library(devtools)
use_r("my_ao")
document()
use_r("find_opt")
use_r("plot_spec")
document()
data("gasoline.data")
View(gasoline.data)
library(devtools)
library(roxygen2)
use_r("boiwsa")
use_r("plot_spec")
document()
?boiwsa
?plot_spec()
data("gasoline.data")
plot(gasoline.data$date,gasoline.data$y,type="l")
res=boiwsa(x=gasoline.data$y,dates=gasoline.data$date) # Seasonal adjustment using
plot_spec(res)
plot(gasoline.data$date,gasoline.data$y,type="l")
lines(gasoline.data$date,res$sa,type="l")
plot(gasoline.data$date,gasoline.data$y,type="l")
lines(gasoline.data$date,res$sa,col="red")
lines(gasoline.data$date,res$trend,col="blue")
plot(gasoline.data$date,(res$sa-res$trend),type="l")
library(forecast)
ggtsdisplay((res$sa-res$trend),lag.max = 55)
install.packages(“AER”)
library(remotes)
library(devtools)
install.packages(“AER”)
install.packages("AER")
?CASchools
library(AER)
?CASchools
data(CASchools)
View(CASchools)
